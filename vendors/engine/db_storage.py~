#!/usr/bin/python3
'''
the modules defines a database storage
'''
import sqlalchemy
from sqlalchemy import create_engine
from sqlalchemy.orm import scoped_session, sessionmaker


class Db_storage:
    ''' this define the database to store the class of the 
        vendors
    '''
    __session = None
    __engine = None

    def __init__(self):
        '''constructs the engine for storage'''
        self.__engine = create_engine('mysql+mysqldb://bion_dev:bion_dev_pwd@localhost/bion_db')

    def new(self, obj):
        ''' this adds a new object to the database
        parameter
            obj (class object): an object of ony of the vendor class
        '''
        self.__session.add(obj)

    def save(self):
        '''this commits and saves the object to the database
        parameter
        '''
        self.__session.commit()

    def load(self):
        '''create all tables and create a session '''
        Base.metadata.create_all(self.__engine)
        session = sessionmaker(bind=self.__engine, expire_on_commit=False)
        self.__session = scoped_session(session)

    def close():
        ''' this closes the session'''
        self.__session.remove()

    def drop(self):
        ''' drop all tables'''
        Base.metadata.create_all()



